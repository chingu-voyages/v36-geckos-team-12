{"ast":null,"code":"var _jsxFileName = \"/Users/ijimin/ejaman/v36-geckos-team-12/virtualPostcard/src/components/Mail/Mail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport Axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Mail.module.css\";\nimport ImgFile from \"../imgFile/imgFile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SendMail = _ref => {\n  _s();\n\n  let {\n    FileInput,\n    sendtoMail\n  } = _ref;\n  const formRef = useRef(); // const emailRef = useRef();\n\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const data = {\n    currentEmail: email,\n    currentName: name,\n    currentMessage: message,\n    currentImage: props.sendtoMail\n  }; // call backend mailer.js\n\n  function sendNodemailer(e) {\n    e.preventDefault();\n\n    try {\n      Axios.post(\"http://localhost:8001/sendNodemailer\", data);\n    } catch (error) {\n      console.log(error.response.data);\n    }\n\n    alert(\"Your postcard has been sent!\");\n    formRef.current.reset();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    ref: formRef,\n    className: styles.form,\n    onSubmit: e => setEmail(e.target.value),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      // ref={emailRef}\n      // className={styles.input}\n      // type=\"text\"\n      // name=\"email\"\n      // placeholder=\"email\"\n      className: styles.input,\n      type: \"text\",\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Email\",\n      value: email,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: styles.input,\n      type: \"text\",\n      onChange: e => setName(e.target.value),\n      placeholder: \"Name\",\n      value: name,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: styles.msg,\n      type: \"text\",\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Message\",\n      value: message,\n      rows: \"5\",\n      cols: \"30\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.btns,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.sendBtn,\n        type: \"submit\",\n        onClick: sendNodemailer,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImgFile, {\n        FileInput: FileInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SendMail, \"we4rOFNcmLYC3Q8C7ZKQTUUmrAU=\");\n\n_c = SendMail;\nSendMail.propTypes = {\n  sendtoMail: PropTypes.string,\n  FileInput: PropTypes.func\n};\nexport default SendMail;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendMail\");","map":{"version":3,"sources":["/Users/ijimin/ejaman/v36-geckos-team-12/virtualPostcard/src/components/Mail/Mail.jsx"],"names":["React","useRef","useState","Axios","PropTypes","styles","ImgFile","SendMail","FileInput","sendtoMail","formRef","email","setEmail","name","setName","message","setMessage","data","currentEmail","currentName","currentMessage","currentImage","props","sendNodemailer","e","preventDefault","post","error","console","log","response","alert","current","reset","form","target","value","input","msg","btns","sendBtn","propTypes","string","func"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport Axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Mail.module.css\";\nimport ImgFile from \"../imgFile/imgFile\";\n\nconst SendMail = ({ FileInput, sendtoMail }) => {\n  const formRef = useRef();\n  // const emailRef = useRef();\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const data = {\n    currentEmail: email,\n    currentName: name,\n    currentMessage: message,\n    currentImage: props.sendtoMail,\n  };\n\n  // call backend mailer.js\n  function sendNodemailer(e) {\n    e.preventDefault();\n    try {\n      Axios.post(\"http://localhost:8001/sendNodemailer\", data);\n    } catch (error) {\n      console.log(error.response.data);\n    }\n    alert(\"Your postcard has been sent!\");\n    formRef.current.reset();\n  }\n\n  return (\n    <form\n      ref={formRef}\n      className={styles.form}\n      onSubmit={(e) => setEmail(e.target.value)}\n    >\n      <input\n        // ref={emailRef}\n        // className={styles.input}\n        // type=\"text\"\n        // name=\"email\"\n        // placeholder=\"email\"\n\n        className={styles.input}\n        type=\"text\"\n        onChange={(e) => setEmail(e.target.value)}\n        placeholder=\"Email\"\n        value={email}\n        required\n      />\n      <input\n        className={styles.input}\n        type=\"text\"\n        onChange={(e) => setName(e.target.value)}\n        placeholder=\"Name\"\n        value={name}\n        required\n      />\n      <textarea\n        className={styles.msg}\n        type=\"text\"\n        onChange={(e) => setMessage(e.target.value)}\n        placeholder=\"Message\"\n        value={message}\n        rows=\"5\"\n        cols=\"30\"\n        required\n      />\n      <div className={styles.btns}>\n        <button\n          className={styles.sendBtn}\n          type=\"submit\"\n          onClick={sendNodemailer}\n        >\n          Send\n        </button>\n        <ImgFile FileInput={FileInput} />\n      </div>\n    </form>\n  );\n};\n\nSendMail.propTypes = {\n  sendtoMail: PropTypes.string,\n  FileInput: PropTypes.func,\n};\n\nexport default SendMail;\n"]},"metadata":{},"sourceType":"module"}