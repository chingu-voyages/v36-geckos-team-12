{"ast":null,"code":"var _jsxFileName = \"/Users/ijimin/ejaman/v36-geckos-team-12/virtualPostcard/src/components/grid/Grid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styles from \"./Grid.module.css\";\nimport Axios from \"axios\";\nimport DisplayImage from \"../displayImage/DisplayImage\";\nimport Mail from \"../mail/Mail\"; // import ImgApi from \"../imgApi/imgApi\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Grid = props => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [array, setArray] = useState([]);\n  const [page, setPage] = useState(1);\n  const [image, setImage] = useState(\"\");\n  const clientId = process.env.REACT_APP_CLIENT_ID;\n  const url = `https://api.unsplash.com/search/photos?client_id=${clientId}&query=${query}&page=${page}&per_page=16`; // call Unsplash\n\n  function getData(e) {\n    e.preventDefault();\n\n    try {\n      Axios.get(url).then(response => {\n        setArray(response.data.results);\n      }, [query]);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const onClickImg = e => setImage(e.target.src);\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.grid_2_columns,\n      children: [/*#__PURE__*/_jsxDEV(Mail, {\n        sendtoMail: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DisplayImage, {\n        imageTarget: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.form,\n        onSubmit: getData,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"query\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.input,\n          type: \"text\",\n          placeholder: \"Search...\",\n          name: \"query\",\n          value: query,\n          onChange: e => setQuery(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button,\n          type: \"submit\",\n          onClick: getData,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.grid_4_columns,\n          children: array.map(url => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: url.urls.full,\n                alt: \"images\",\n                onClick: onClickImg,\n                className: styles.img\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this)\n            }, url.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.pageBtn,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.button,\n            onClick: () => {\n              if (page !== 1) {\n                setPage(page => page - 1);\n              }\n            },\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.button,\n            onClick: () => {\n              setPage(page => page + 1);\n            },\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Grid, \"eUz8wmyLdkKwpAap7XIUyYUCMpE=\");\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/Users/ijimin/ejaman/v36-geckos-team-12/virtualPostcard/src/components/grid/Grid.jsx"],"names":["React","useState","styles","Axios","DisplayImage","Mail","Grid","props","query","setQuery","array","setArray","page","setPage","image","setImage","clientId","process","env","REACT_APP_CLIENT_ID","url","getData","e","preventDefault","get","then","response","data","results","error","console","log","onClickImg","target","src","container","grid_2_columns","form","input","value","button","grid_4_columns","map","urls","full","img","id","pageBtn"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./Grid.module.css\";\nimport Axios from \"axios\";\nimport DisplayImage from \"../displayImage/DisplayImage\";\n\nimport Mail from \"../mail/Mail\";\n// import ImgApi from \"../imgApi/imgApi\";\n\nconst Grid = (props) => {\n  const [query, setQuery] = useState(\"\");\n  const [array, setArray] = useState([]);\n  const [page, setPage] = useState(1);\n\n  const [image, setImage] = useState(\"\");\n\n  const clientId = process.env.REACT_APP_CLIENT_ID;\n  const url = `https://api.unsplash.com/search/photos?client_id=${clientId}&query=${query}&page=${page}&per_page=16`;\n\n  // call Unsplash\n  function getData(e) {\n    e.preventDefault();\n    try {\n      Axios.get(url).then(\n        (response) => {\n          setArray(response.data.results);\n        },\n        [query]\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  const onClickImg = (e) => setImage(e.target.src);\n\n  return (\n    <section className={styles.container}>\n      <div className={styles.grid_2_columns}>\n        {/* display image to other side */}\n\n        <Mail sendtoMail={image} />\n        <DisplayImage imageTarget={image} />\n        {/* <DisplayImage imageTarget={image} /> */}\n        {/* <ImgApi /> */}\n\n        <form className={styles.form} onSubmit={getData}>\n          <label htmlFor=\"query\"> </label>\n          <input\n            className={styles.input}\n            type=\"text\"\n            placeholder=\"Search...\"\n            name=\"query\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n          />\n          <button className={styles.button} type=\"submit\" onClick={getData}>\n            Search\n          </button>\n\n          {/* still fixing bugs of upload image*/}\n          {/* < UploadImage callUpload={ (e) => setImage(e) } /> */}\n\n          {/* get images and loop through */}\n          <div className={styles.grid_4_columns}>\n            {array.map((url) => {\n              return (\n                <div key={url.id}>\n                  <img\n                    src={url.urls.full}\n                    alt=\"images\"\n                    onClick={onClickImg}\n                    className={styles.img}\n                  />\n                </div>\n              );\n            })}\n          </div>\n\n          {/*  previous and next buttons  */}\n          <div className={styles.pageBtn}>\n            <button\n              className={styles.button}\n              onClick={() => {\n                if (page !== 1) {\n                  setPage((page) => page - 1);\n                }\n              }}\n            >\n              Previous\n            </button>\n            <button\n              className={styles.button}\n              onClick={() => {\n                setPage((page) => page + 1);\n              }}\n            >\n              Next\n            </button>\n          </div>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nexport default Grid;\n"]},"metadata":{},"sourceType":"module"}