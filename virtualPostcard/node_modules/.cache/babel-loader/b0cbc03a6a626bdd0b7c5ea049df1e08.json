{"ast":null,"code":"var _jsxFileName = \"/Users/yushpitt/Desktop/v36-geckos-team-12/virtualPostcard/src/components/grid/Grid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useDeepCompareEffect } from 'react';\nimport Axios from 'axios';\nimport DisplayImage from \"../displayImage/DisplayImage\";\nimport UploadImage from \"../uploadImage/UploadImage\";\nimport styles from './Grid.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Grid() {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [array, setArray] = useState([]);\n  const [page, setPage] = useState(1);\n  const [{\n    image,\n    updated\n  }, setImageObj] = useState({\n    image: \"\",\n    updated: false\n  });\n\n  const setImage = image => setImageObj({\n    image,\n    updated: true\n  });\n\n  const clientId = \"-ykMZOxHVnu9CGPy0hKbcnbp12CFAZptKJ5CfeOYoiM\";\n  const url = `https://api.unsplash.com/search/photos?client_id=${clientId}&query=${query}&page=${page}&per_page=16`;\n\n  function getData(e) {\n    e.preventDefault();\n\n    try {\n      Axios.get(url).then(response => {\n        setArray(response.data.results);\n      }, [query]);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  if (page !== 1) {\n    setPage(1);\n  } // useEffect(() => {\n  // setImage(image)\n  // }, [image]);\n\n\n  const effectDependency = {\n    payload: image\n  };\n  useDeepCompareEffect(() => {\n    console.log(effectDependency);\n  }, [effectDependency]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.grid_2_columns,\n      children: [/*#__PURE__*/_jsxDEV(DisplayImage, {\n        imageTarget: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.form,\n        onSubmit: getData,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"query\",\n          children: [\" \", \" \", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.input,\n          type: \"text\",\n          placeholder: \"Search...\",\n          name: \"query\",\n          value: query,\n          onChange: e => setQuery(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button,\n          type: \"submit\",\n          onClick: getData,\n          children: \" Search \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(UploadImage, {\n          callUpload: e => setImage(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.grid_4_columns,\n          children: array.map(url => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: url.urls.full,\n                  alt: \"images\",\n                  onClick: e => setImage(e.target.src),\n                  className: styles.img\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 8\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 8\n              }, this)\n            }, url.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 35\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.pageBtn,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.button,\n            onClick: () => {\n              setPage(page => page - 1);\n            },\n            children: \"Previous \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.button,\n            onClick: () => {\n              setPage(page => page + 1);\n            },\n            children: \"Next \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 1\n  }, this);\n}\n\n_s(Grid, \"03HRWDMGgal1GqkPyzncca8uExs=\", false, function () {\n  return [useDeepCompareEffect];\n});\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/Users/yushpitt/Desktop/v36-geckos-team-12/virtualPostcard/src/components/grid/Grid.jsx"],"names":["React","useState","useDeepCompareEffect","Axios","DisplayImage","UploadImage","styles","Grid","query","setQuery","array","setArray","page","setPage","image","updated","setImageObj","setImage","clientId","url","getData","e","preventDefault","get","then","response","data","results","error","console","log","effectDependency","payload","container","grid_2_columns","form","input","target","value","button","grid_4_columns","map","urls","full","src","img","id","pageBtn"],"mappings":"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","sourcesContent":["import React, { useState, useDeepCompareEffect } from 'react';\nimport Axios from 'axios';\nimport DisplayImage from \"../displayImage/DisplayImage\";\nimport UploadImage from \"../uploadImage/UploadImage\";\nimport styles from './Grid.module.css'\n\n function Grid(){\n  const [query, setQuery] = useState(\"\");\n  const [array, setArray] = useState([]);\n  const [page, setPage] = useState(1);\n\n  const [{ image, updated }, setImageObj] = useState({\n    image: \"\",\n    updated: false\n  });\n\n  const setImage = image => setImageObj({image, updated: true});\n\n  const clientId = \"-ykMZOxHVnu9CGPy0hKbcnbp12CFAZptKJ5CfeOYoiM\";\n  const url = `https://api.unsplash.com/search/photos?client_id=${clientId}&query=${query}&page=${page}&per_page=16`\n\n  function getData(e) {\n    e.preventDefault();\n\n    try {\n      Axios.get(url).then(response => {\n        setArray(response.data.results)\n      }, [query]);\n    } catch (error) {\n        console.log(error);\n      }\n    }\n  if (page !== 1) {setPage(1)}\n\n// useEffect(() => {\n// setImage(image)\n// }, [image]);\n\nconst effectDependency = {payload: image};\n\nuseDeepCompareEffect(() => {\n  console.log(effectDependency)\n}, [effectDependency]\n);\n\n\n  return (\n<section className = {styles.container} >\n  < div className = { styles.grid_2_columns } >\n    < DisplayImage imageTarget = { image } />\n    <form className={styles.form} onSubmit={getData}>\n      <label htmlFor=\"query\"> {\" \"} </label>\n      < input className = { styles.input } type = \"text\"\n       placeholder = \"Search...\" name=\"query\" value={query}\n       onChange={(e) => setQuery(e.target.value)}/>\n       < button className = { styles.button } type = \"submit\"\n       onClick={ getData } > Search < /button >\n  < UploadImage callUpload={ (e) => setImage(e) } />\n    < div className = { styles.grid_4_columns } >\n      { array.map(url => { return <div key = { url.id } >\n       < div >\n       < img src = { url.urls.full } alt = \"images\"\n       onClick = { (e) => setImage(e.target.src) }\n       className = { styles.img } />\n       < /div >\n       </div > })}\n    < /div >\n\n      < div className = {styles.pageBtn}>\n        < button className= {styles.button}\n        onClick={() => { setPage(page => page - 1)} }>\n        Previous </ button >\n        < button className={styles.button}\n        onClick={() => { setPage(page => page + 1)} }>\n        Next </ button>\n      < /div >\n    </form>\n  </ div>\n  </section>\n  );\n }\n\nexport default Grid;\n"]},"metadata":{},"sourceType":"module"}