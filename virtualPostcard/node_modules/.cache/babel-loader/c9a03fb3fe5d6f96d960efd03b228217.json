{"ast":null,"code":"var _jsxFileName = \"/Users/yushpitt/Desktop/v36-geckos-team-12/virtualPostcard/src/components/grid/Grid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Axios from 'axios';\nimport DisplayImage from \"../displayImage/DisplayImage\"; // import UploadImage from \"../uploadImage/UploadImage\";\n\nimport styles from './Grid.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Grid() {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [array, setArray] = useState([]);\n  const [page, setPage] = useState(1);\n  const [image, setImage] = useState(\"\");\n  const clientId = \"-ykMZOxHVnu9CGPy0hKbcnbp12CFAZptKJ5CfeOYoiM\";\n  const url = `https://api.unsplash.com/search/photos?client_id=${clientId}&query=${query}&page=${page}&per_page=16`; // call Unsplash\n\n  function getData(e) {\n    e.preventDefault();\n\n    try {\n      Axios.get(url).then(response => {\n        setArray(response.data.results);\n      }, [query]);\n    } catch (error) {\n      console.log(error);\n    }\n  } // if (page !== 1) {setPage(1)}\n  // useEffect(() => {\n  // setImage(image)\n  // }, [image]);\n\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.grid_2_columns,\n      children: [/*#__PURE__*/_jsxDEV(DisplayImage, {\n        imageTarget: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.form,\n        onSubmit: getData,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"query\",\n          children: [\" \", \" \", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.input,\n          type: \"text\",\n          placeholder: \"Search...\",\n          name: \"query\",\n          value: query,\n          onChange: e => setQuery(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button,\n          type: \"submit\",\n          onClick: getData,\n          children: \" Search \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.grid_4_columns,\n          children: array.map(url => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: url.urls.full,\n                alt: \"images\",\n                onClick: e => setImage(e.target.src),\n                className: styles.img\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 7\n              }, this)\n            }, url.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.pageBtn,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.button,\n            onClick: () => {\n              if (page !== 1) {\n                setPage(page => page - 1);\n              }\n            },\n            children: \"Previous \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.button,\n            onClick: () => {\n              setPage(page => page + 1);\n            },\n            children: \"Next \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Grid, \"eUz8wmyLdkKwpAap7XIUyYUCMpE=\");\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/Users/yushpitt/Desktop/v36-geckos-team-12/virtualPostcard/src/components/grid/Grid.jsx"],"names":["React","useState","Axios","DisplayImage","styles","Grid","query","setQuery","array","setArray","page","setPage","image","setImage","clientId","url","getData","e","preventDefault","get","then","response","data","results","error","console","log","container","grid_2_columns","form","input","target","value","button","grid_4_columns","map","urls","full","src","img","id","pageBtn"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Axios from 'axios';\nimport DisplayImage from \"../displayImage/DisplayImage\";\n// import UploadImage from \"../uploadImage/UploadImage\";\nimport styles from './Grid.module.css'\n\n function Grid(){\n  const [query, setQuery] = useState(\"\");\n  const [array, setArray] = useState([]);\n  const [page, setPage] = useState(1);\n  const [image, setImage] = useState(\"\");\n\n  const clientId = \"-ykMZOxHVnu9CGPy0hKbcnbp12CFAZptKJ5CfeOYoiM\";\n  const url = `https://api.unsplash.com/search/photos?client_id=${clientId}&query=${query}&page=${page}&per_page=16`\n\n  // call Unsplash\n  function getData(e) {\n    e.preventDefault();\n    try {\n      Axios.get(url).then(response => {\n        setArray(response.data.results)\n      }, [query]);\n    } catch (error) {\n        console.log(error);\n      }\n    }\n\n\n  // if (page !== 1) {setPage(1)}\n\n// useEffect(() => {\n// setImage(image)\n// }, [image]);\n\n\n  return (\n    <section className = {styles.container} >\n      < div className = { styles.grid_2_columns } >\n      {/* display image to other side */}\n      < DisplayImage imageTarget = { image } />\n\n      < form className={styles.form} onSubmit={getData} >\n      < label htmlFor=\"query\"> {\" \"} </ label >\n      < input className = { styles.input } type = \"text\"\n       placeholder = \"Search...\" name=\"query\" value={query}\n       onChange={(e) => setQuery(e.target.value)} />\n      < button className = { styles.button } type = \"submit\"\n       onClick={ getData } > Search </ button >\n\n     {/* still fixing bugs of upload image*/}\n     {/* < UploadImage callUpload={ (e) => setImage(e) } /> */}\n\n     {/* get images and loop through */}\n      < div className = { styles.grid_4_columns } >\n       { array.map(url => { return <div key = { url.id } >\n\n      < img src = { url.urls.full } alt = \"images\"\n       onClick = { (e) => setImage(e.target.src) }\n       className = { styles.img } />\n\n      </ div > }\n      )}\n      </ div >\n\n      {/*  previous and next buttons  */}\n      < div className = {styles.pageBtn} >\n      < button className= {styles.button}\n        onClick={() =>  {if (page !== 1) {setPage(page => page - 1)}}} >\n        Previous </ button >\n      < button className={styles.button}\n        onClick={() => { setPage(page => page + 1)} } >\n        Next </ button >\n      </ div >\n    </ form >\n  </ div >\n  </ section >\n  );\n }\n\nexport default Grid;\n"]},"metadata":{},"sourceType":"module"}